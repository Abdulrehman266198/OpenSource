# -*- coding: utf-8 -*-
"""Welcome to Colaboratory

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

class Product:
    def __init__(self, name, price):
        self.name = name
        self.price = price

    def calculate_price(self):
        pass  # Abstract method

class PhysicalProduct(Product):
    def __init__(self, name, price, weight):
        super().__init__(name, price)
        self.weight = weight

    def calculate_price(self):
        return self.price + self.calculate_shipping_cost()

    def calculate_shipping_cost(self):
        return self.weight * 0.1  # Adjust the shipping cost calculation as needed

class DigitalProduct(Product):
    def calculate_price(self):
        return self.price
class ShoppingCart:
    def __init__(self):
        self.cart = []

    def add_product(self, product):
        self.cart.append(product)

    def remove_product(self, product):
        if product in self.cart:
            self.cart.remove(product)

    def calculate_total_price(self):
        total_price = 0
        for product in self.cart:
            total_price += product.calculate_price()
        return total_price

    def checkout(self):
        total_price = self.calculate_total_price()
        # Implement the checkout logic here (e.g., payment processing)
        print(f"Total Price: ${total_price}")
        print("Checkout successful!")

# Create some products
laptop = PhysicalProduct("Laptop", 5000, 5)
ebook = DigitalProduct("Ebook", 500)
tshirt = PhysicalProduct("T-shirt", 45, 1)

# Create a shopping cart
cart = ShoppingCart()

# Add products to the cart
cart.add_product(laptop)
cart.add_product(ebook)
cart.add_product(tshirt)

# Calculate the total price
total_price = cart.calculate_total_price()
print(f"Total Price in Cart: ${total_price}")

# Check out
cart.checkout()